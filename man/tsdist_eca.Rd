% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_dist.R
\name{tsdist_eca}
\alias{tsdist_eca}
\title{Event coincidence analysis.}
\usage{
tsdist_eca(
  ets1,
  ets2,
  delT = 0,
  tau = 0,
  sym = TRUE,
  sig_test = FALSE,
  sig_method = c("poisson", "wt.surrogate", "shuffle.surrogate"),
  sig_level = 0.01,
  reps = 100
)
}
\arguments{
\item{ets1}{Event time series 1 (one means an event, or zero otherwise)}

\item{ets2}{Event time series 2 (one means an event, or zero otherwise)}

\item{delT}{Positive value [1 inf], default = 1. Tolerance window delta T. An
event in time series ets1 occurring simultaneously or delT steps after an
event in time series ets2 also counts for a coincidence. With delT=0 only
simultaneous events are counted for coincidences.}

\item{tau}{Positive value [0 inf], default = 0. Time lag parameter tau allows
for shifted events to be counted for coincidences. If e.g. tau=5, an event
in time series ets1 occurring exactly 5 time steps after an event in time
series ets2 also counts for coincidence.}

\item{sym}{Symetrical distance function (Default = TRUE). When TRUE, The
tolerance window is symmetrically placed around t-tau and t+tau, respectively.
When FALSE, the window starts at t-tau and ends at t-tau-delT for the
precursor coincidence (ets1 -> ets2) and t+tau to t+tau+delT for the trigger
coincidence (ets2 -> ets1).}

\item{sig_test}{Run a statistical test. Return 0 if significant or 1 otherwise}

\item{sig_method}{"poisson" (default), "wt.surrogate" for surrogate time series
having the same average waiting time between two events, or "shuffle.surrogate",
for randomly shuffled time series having the same number of events as the
original time one.}

\item{sig_level}{The significance level to test if correlation is significant.}

\item{reps}{Positive natural number (100 default) defining the number of
surrogate/shuffled time series to be produced for the "surrogate" or "shuffle"
significance test.}
}
\value{
Distance
}
\description{
This function compares the times which the events occur e.g., time indices
where the time series values are different than zero. Note that the intensity
does not matter but if there is an event or not. This function also performs
a statistical test. This implementation uses the CC.eca.ts function from the
CoinCalc package. The current implementation of tsdist_eca() function requires
that ets1 and ets2 have same length. However, the CC.eca.es() can be adapted if
the two time series have different lengths.
}
